{"ast":null,"code":"var _jsxFileName = \"/var/www/html/trackProject/CourseAdvisorExpertSystem/src/component/PersonalityInfo.js\";\nimport React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green } from \"@material-ui/core/colors\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 15\n  }\n})));\nexport default function PersonalTraitForm(props) {\n  const [interested, setInterested] = React.useState({\n    Technical: false,\n    Business: false,\n    Art: false,\n    Computing: false,\n    Medical: false,\n    HealthScience: false\n  });\n  const [personality, setPersonality] = React.useState({\n    Introverts: false,\n    Extroverts: false,\n    Sensors: false,\n    Intuitives: false,\n    Thinkers: false,\n    Feelers: false,\n    Judgers: false,\n    Perceivers: false\n  }); // const [reg, setreg] = React.useState(props.data.age);\n\n  const handleInterested = event => {\n    setInterested({ ...interested,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handlePersonality = event => {\n    setPersonality({ ...personality,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  useEffect(() => {\n    let obj = { ...props.data,\n      interested: Object.keys(interested).filter(item => {\n        return interested[item] && item;\n      }),\n      personality: Object.keys(personality).filter(item => {\n        return personality[item] && item;\n      })\n    };\n    props.callback(obj);\n  }, [interested, personality]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Personal Trait & Hobbies\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Interested Field\")), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.HealthScience || interested.Medical || interested.Business || interested.Art || interested.Computing,\n      checked: interested.Technical,\n      onChange: handleInterested,\n      name: \"Technical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }),\n    label: \"Technical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.HealthScience || interested.Medical || interested.Technical || interested.Art || interested.Computing,\n      checked: interested.Business,\n      onChange: handleInterested,\n      name: \"Business\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }),\n    label: \"Business\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.HealthScience || interested.Medical || interested.Business || interested.Technical || interested.Computing,\n      checked: interested.Art,\n      onChange: handleInterested,\n      name: \"Art\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }),\n    label: \"Art & Humanities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.HealthScience || interested.Medical || interested.Business || interested.Art || interested.Technical,\n      checked: interested.Computing,\n      onChange: handleInterested,\n      name: \"Computing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }),\n    label: \"Computing & IT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.HealthScience || interested.Technical || interested.Business || interested.Art || interested.Computing,\n      checked: interested.Medical,\n      onChange: handleInterested,\n      name: \"Medical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }),\n    label: \"Medical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      disabled: interested.Technical || interested.Medical || interested.Business || interested.Art || interested.Computing,\n      checked: interested.HealthScience,\n      onChange: handleInterested,\n      name: \"HealthScience\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }),\n    label: \"Health Science\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Personality Trait\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Extroverts,\n      checked: personality.Introverts,\n      onChange: handlePersonality,\n      name: \"Introverts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }),\n    label: \"Introverts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Introverts,\n      checked: personality.Extroverts,\n      onChange: handlePersonality,\n      name: \"Extroverts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }),\n    label: \"Extroverts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Intuitives,\n      checked: personality.Sensors,\n      onChange: handlePersonality,\n      name: \"Sensors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }),\n    label: \"Sensors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Sensors,\n      checked: personality.Intuitives,\n      onChange: handlePersonality,\n      name: \"Intuitives\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }),\n    label: \"Intuitives\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Feelers,\n      checked: personality.Thinkers,\n      onChange: handlePersonality,\n      name: \"Thinkers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }),\n    label: \"Thinkers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Thinkers,\n      checked: personality.Feelers,\n      onChange: handlePersonality,\n      name: \"Feelers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }),\n    label: \"Feelers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Perceivers,\n      checked: personality.Judgers,\n      onChange: handlePersonality,\n      name: \"Judgers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }),\n    label: \"Judgers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      disabled: personality.Judgers,\n      checked: personality.Perceivers,\n      onChange: handlePersonality,\n      name: \"Perceivers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }),\n    label: \"Perceivers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"reg\",\n    name: \"reg\" // value={reg}\n    ,\n    label: \"Reg Number\",\n    fullWidth: true,\n    autoComplete: \"off\" // onChange={handleAge}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/var/www/html/trackProject/CourseAdvisorExpertSystem/src/component/PersonalityInfo.js"],"names":["React","useEffect","Grid","Typography","green","TextField","withStyles","FormControlLabel","FormControl","FormLabel","Checkbox","FormGroup","GreenCheckbox","root","color","checked","props","PersonalTraitForm","interested","setInterested","useState","Technical","Business","Art","Computing","Medical","HealthScience","personality","setPersonality","Introverts","Extroverts","Sensors","Intuitives","Thinkers","Feelers","Judgers","Perceivers","handleInterested","event","target","name","handlePersonality","obj","data","Object","keys","filter","item","callback"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green } from \"@material-ui/core/colors\";\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function PersonalTraitForm(props) {\n  const [interested, setInterested] = React.useState({\n    Technical: false,\n    Business: false,\n    Art: false,\n    Computing: false,\n    Medical: false,\n    HealthScience: false,\n  });\n\n  const [personality, setPersonality] = React.useState({\n    Introverts: false,\n    Extroverts: false,\n    Sensors: false,\n    Intuitives: false,\n    Thinkers: false,\n    Feelers: false,\n    Judgers: false,\n    Perceivers: false,\n  });\n\n  // const [reg, setreg] = React.useState(props.data.age);\n\n  const handleInterested = (event) => {\n    setInterested({ ...interested, [event.target.name]: event.target.checked });\n  };\n\n  const handlePersonality = (event) => {\n    setPersonality({\n      ...personality,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  useEffect(() => {\n    let obj = {\n      ...props.data,\n      interested: Object.keys(interested).filter((item) => {\n        return interested[item] && item;\n      }),\n      personality: Object.keys(personality).filter((item) => {\n        return personality[item] && item;\n      }),\n    };\n    props.callback(obj);\n  }, [interested, personality]);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Personal Trait & Hobbies\n      </Typography>\n      <Grid container spacing={3} direction=\"column\">\n        <Grid item xs={3}>\n          <FormLabel component=\"legend\">Interested Field</FormLabel>\n        </Grid>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.HealthScience ||\n                  interested.Medical ||\n                  interested.Business ||\n                  interested.Art ||\n                  interested.Computing\n                }\n                checked={interested.Technical}\n                onChange={handleInterested}\n                name=\"Technical\"\n              />\n            }\n            label=\"Technical\"\n          />\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.HealthScience ||\n                  interested.Medical ||\n                  interested.Technical ||\n                  interested.Art ||\n                  interested.Computing\n                }\n                checked={interested.Business}\n                onChange={handleInterested}\n                name=\"Business\"\n              />\n            }\n            label=\"Business\"\n          />\n\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.HealthScience ||\n                  interested.Medical ||\n                  interested.Business ||\n                  interested.Technical ||\n                  interested.Computing\n                }\n                checked={interested.Art}\n                onChange={handleInterested}\n                name=\"Art\"\n              />\n            }\n            label=\"Art & Humanities\"\n          />\n\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.HealthScience ||\n                  interested.Medical ||\n                  interested.Business ||\n                  interested.Art ||\n                  interested.Technical\n                }\n                checked={interested.Computing}\n                onChange={handleInterested}\n                name=\"Computing\"\n              />\n            }\n            label=\"Computing & IT\"\n          />\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.HealthScience ||\n                  interested.Technical ||\n                  interested.Business ||\n                  interested.Art ||\n                  interested.Computing\n                }\n                checked={interested.Medical}\n                onChange={handleInterested}\n                name=\"Medical\"\n              />\n            }\n            label=\"Medical\"\n          />\n          <FormControlLabel\n            control={\n              <GreenCheckbox\n                disabled={\n                  interested.Technical ||\n                  interested.Medical ||\n                  interested.Business ||\n                  interested.Art ||\n                  interested.Computing\n                }\n                checked={interested.HealthScience}\n                onChange={handleInterested}\n                name=\"HealthScience\"\n              />\n            }\n            label=\"Health Science\"\n          />\n        </FormGroup>\n        &nbsp;&nbsp;\n        <Grid item xs={3}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Personality Trait</FormLabel>\n          </FormControl>\n        </Grid>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Extroverts}\n                checked={personality.Introverts}\n                onChange={handlePersonality}\n                name=\"Introverts\"\n              />\n            }\n            label=\"Introverts\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Introverts}\n                checked={personality.Extroverts}\n                onChange={handlePersonality}\n                name=\"Extroverts\"\n              />\n            }\n            label=\"Extroverts\"\n          />\n        </FormGroup>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Intuitives}\n                checked={personality.Sensors}\n                onChange={handlePersonality}\n                name=\"Sensors\"\n              />\n            }\n            label=\"Sensors\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Sensors}\n                checked={personality.Intuitives}\n                onChange={handlePersonality}\n                name=\"Intuitives\"\n              />\n            }\n            label=\"Intuitives\"\n          />\n        </FormGroup>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Feelers}\n                checked={personality.Thinkers}\n                onChange={handlePersonality}\n                name=\"Thinkers\"\n              />\n            }\n            label=\"Thinkers\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Thinkers}\n                checked={personality.Feelers}\n                onChange={handlePersonality}\n                name=\"Feelers\"\n              />\n            }\n            label=\"Feelers\"\n          />\n        </FormGroup>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Perceivers}\n                checked={personality.Judgers}\n                onChange={handlePersonality}\n                name=\"Judgers\"\n              />\n            }\n            label=\"Judgers\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                disabled={personality.Judgers}\n                checked={personality.Perceivers}\n                onChange={handlePersonality}\n                name=\"Perceivers\"\n              />\n            }\n            label=\"Perceivers\"\n          />\n        </FormGroup>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          required\n          id=\"reg\"\n          name=\"reg\"\n          // value={reg}\n          label=\"Reg Number\"\n          fullWidth\n          autoComplete=\"off\"\n        // onChange={handleAge}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}